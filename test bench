module ALU_tb;

    reg [3:0] A;
    reg [3:0] B;
    reg [2:0] opcode;
    wire [3:0] result;
    wire carry_out;
    wire zero;

    // Instantiate the ALU
    ALU alu_inst (
        .A(A),
        .B(B),
        .opcode(opcode),
        .result(result),
        .carry_out(carry_out),
        .zero(zero)
    );

    initial begin
        // Monitor the changes
        $monitor("Time=%0d A=%b B=%b Opcode=%b Result=%b Carry=%b Zero=%b", 
                 $time, A, B, opcode, result, carry_out, zero);

        // Test Addition (A + B)
        A = 4'b0011; B = 4'b0101; opcode = 3'b000; #10;

        // Test Subtraction (A - B)
        A = 4'b0110; B = 4'b0010; opcode = 3'b001; #10;

        // Test AND
        A = 4'b1100; B = 4'b1010; opcode = 3'b010; #10;

        // Test OR
        A = 4'b1100; B = 4'b1010; opcode = 3'b011; #10;

        // Test NOT
        A = 4'b1010; B = 4'b0000; opcode = 3'b100; #10;

        // End simulation
        $finish;
    end

endmodule
